{"version":3,"sources":["../../../widgets/Localizar_wgt/Widget.js"],"names":["declare","BaseWidget","SpatialReference","ProjectParameters","GeometryService","Point","SimpleLineSymbol","SimpleMarkerSymbol","Color","Graphic","Message","InfoTemplate","baseClass","tabSelected","obj_resultados","obj_index","postCreate","inherited","arguments","console","log","self_lw","_showMessage","message","type","messagebox","titleLabel","nls","_widgetLabel","buttons","label","onClick","lang","hitch","close","_cleanMap","_tabToggleForm","evt","currentTarget","id","classList","contains","dojo","query","forEach","node","container_option","toggle","remove","_applyGraphic","_graphPoint","srid","select_punto_opcion_lw","value","src","x","ap_input_x_lw","add","_validateCoordX","y","ap_input_y_lw","_validateCoordY","geometryService","spatialReference","wkid","parseInt","point","parseFloat","pointTransform","parameters","geometries","normalize","outSR","map","transformForward","project","on","results","symbol","STYLE_SQUARE","STYLE_SOLID","graphic","geometry","graphics","setInfoTemplate","infoWindow","setTitle","getTitle","setContent","getContent","show","centerAndZoom","_addResultados","ap_none_resultados_opcion_lw","hidden","addClass","ap_resultados_lw","click","error","response","graph","name","i_class","icon_elm","tr","create","_extent","tds","innerHTML","style","cursor","ap_resultados_body_lw","appendChild","_zoomToExtentByResult","self_cw","setExtent","startup"],"mappings":"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","file":"Widget.js","sourcesContent":["import declare from 'dojo/_base/declare';\r\nimport BaseWidget from 'jimu/BaseWidget';\r\nimport SpatialReference from \"esri/SpatialReference\";\r\nimport ProjectParameters from \"esri/tasks/ProjectParameters\";\r\nimport GeometryService from 'esri/tasks/GeometryService';\r\nimport Point from \"esri/geometry/Point\";\r\n// import SimpleFillSymbol from 'esri/symbols/SimpleFillSymbol';\r\nimport SimpleLineSymbol from 'esri/symbols/SimpleLineSymbol';\r\nimport SimpleMarkerSymbol from 'esri/symbols/SimpleMarkerSymbol';\r\n// import webMercatorUtils from \"esri/geometry/webMercatorUtils\";\r\nimport Color from 'dojo/_base/Color';\r\nimport Graphic from 'esri/graphic';\r\nimport Message from \"jimu/dijit/Message\";\r\nimport InfoTemplate from \"esri/InfoTemplate\";\r\n\r\n// To create a widget, you need to derive from BaseWidget.\r\nexport default declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'localizar-wgt',\r\n    tabSelected: 'punto',\r\n    obj_resultados: {},\r\n    obj_index: 0,\r\n\r\n    // add additional properties here\r\n\r\n    // methods to communication with app container:\r\n    postCreate() {\r\n        this.inherited(arguments);\r\n        console.log('Localizar_wgt::postCreate');\r\n        self_lw = this;\r\n    },\r\n\r\n    _showMessage(message, type = 'message') {\r\n        switch (type) {\r\n            case 'question':\r\n                let messagebox = new Message({\r\n                    type: type,\r\n                    titleLabel: `Widget ${this.nls._widgetLabel}: ${type}`,\r\n                    message: message,\r\n                    buttons: [{\r\n                        label: 'SI',\r\n                        onClick: lang.hitch(this, lang.hitch(this, function() {\r\n                            messagebox.close();\r\n                        }))\r\n                    }, {\r\n                        label: 'NO',\r\n                        onClick: lang.hitch(this, lang.hitch(this, function() {\r\n                            this._cleanMap();\r\n                            messagebox.close();\r\n                        }))\r\n                    }]\r\n                });\r\n\r\n                break;\r\n            default:\r\n                new Message({\r\n                    type: type,\r\n                    titleLabel: `Widget ${this.nls._widgetLabel}: ${type}`,\r\n                    message: message,\r\n                });\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    // Funcion que permite habilitar el contenido de acuerdo al tab seleccionado\r\n    _tabToggleForm(evt) {\r\n        self_lw.tabSelected = evt.currentTarget.id;\r\n        if (evt.currentTarget.classList.contains('is-active')) {\r\n            return\r\n        };\r\n        dojo.query('.opcion_lw').forEach(function(node) {\r\n            let container_option = self_lw[`${node.id}_${node.classList[0]}`]\r\n            if (node.id == self_lw.tabSelected) {\r\n                node.classList.toggle('is-active')\r\n                container_option.classList.toggle('is-active')\r\n            } else {\r\n                node.classList.remove('is-active');\r\n                container_option.classList.remove('is-active')\r\n            }\r\n        });\r\n    },\r\n\r\n    _applyGraphic(evt) {\r\n        switch (tabSelected) {\r\n            case 'punto':\r\n                this._graphPoint();\r\n                break;\r\n            case 'poligono':\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    _graphPoint() {\r\n        // Captura del SRC seleccionado\r\n        let srid = self_lw.select_punto_opcion_lw.value;\r\n\r\n        let src = srid == '4326' ? 'gcs' : 'utm';\r\n\r\n        // Validacion de cordenada X ingresada \r\n        let x = self_lw.ap_input_x_lw.value;\r\n\r\n\r\n        if (!x) {\r\n            self_lw.ap_input_x_lw.classList.add('is-danger')\r\n            return\r\n        };\r\n\r\n        // x = parseInt(x);\r\n\r\n        if (!self_lw._validateCoordX(x, src)) {\r\n            self_lw.ap_input_x_lw.classList.add('is-danger')\r\n            return\r\n        };\r\n\r\n        self_lw.ap_input_x_lw.classList.remove('is-danger')\r\n\r\n        // Validacion de cordenada Y ingresada\r\n        let y = self_lw.ap_input_y_lw.value;\r\n\r\n        if (!y) {\r\n            self_lw.ap_input_y_lw.classList.add('is-danger')\r\n            return\r\n        };\r\n\r\n        // y = parseInt(y);\r\n\r\n        if (!self_lw._validateCoordY(y, src)) {\r\n            self_lw.ap_input_y_lw.classList.add('is-danger')\r\n            return\r\n        };\r\n\r\n        self_lw.ap_input_y_lw.classList.remove('is-danger')\r\n\r\n        let geometryService = new GeometryService(\"https://geoportal.minem.gob.pe/minem/rest/services/Utilities/Geometry/GeometryServer\");\r\n\r\n\r\n        let spatialReference = new SpatialReference({ wkid: parseInt(srid) });\r\n        let point = new Point(parseFloat(x), parseFloat(y), spatialReference);\r\n        let pointTransform = null;\r\n\r\n        let parameters = new ProjectParameters();\r\n        parameters.geometries = [point.normalize()];\r\n        parameters.outSR = self_lw.map.spatialReference;\r\n        parameters.transformForward = true;\r\n\r\n        // var thiss = this;\r\n        //thiss.map.addLayer(thiss.layer);\r\n        geometryService.project(parameters);\r\n        geometryService.on(\"project-complete\", function(results) {\r\n            pointTransform = results.geometries[0];\r\n            let symbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_SQUARE, 15, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([255, 0, 0]), 2), new Color([0, 255, 0, 0.25]));\r\n            // let symbol = new SimpleMarkerSymbol();\r\n            let graphic = new Graphic(pointTransform, symbol);\r\n            console.log(graphic);\r\n            if (graphic.geometry.x == \"NaN\" || graphic.geometry.y == \"NaN\") {\r\n                self_lw._showMessage(\"No se puede referenciar la coordenada en el mapa\")\r\n                    // console.log(\"No se puede referenciar la coordenada en el mapa\");\r\n                return\r\n            }\r\n            self_lw.map.graphics.add(graphic);\r\n            // self_lw.map.centerAndZoom(pointTransform, 10);\r\n            // self_lw._addResultados(graphic);\r\n            // self_lw.ap_none_resultados_opcion_lw.hidden = true;\r\n            // dojo.query('.container_resultados_lw').addClass('is-active')\r\n            // self_lw.ap_resultados_lw.click();\r\n\r\n            graphic.setInfoTemplate(new InfoTemplate(\"Coordenadas\", \"<span>Este / Long:</span>\" + point.x + \"<br />\" + \"<span>Norte / Lat:</span>\" + point.y));\r\n            self_lw.map.infoWindow.setTitle(graphic.getTitle());\r\n            self_lw.map.infoWindow.setContent(graphic.getContent());\r\n            self_lw.map.infoWindow.show(pointTransform);\r\n            self_lw.map.centerAndZoom(pointTransform, 10);\r\n\r\n            self_lw._addResultados(graphic);\r\n            self_lw.ap_none_resultados_opcion_lw.hidden = true;\r\n\r\n            dojo.query('.container_resultados_lw').addClass('is-active')\r\n            self_lw.ap_resultados_lw.click();\r\n        });\r\n        geometryService.on(\"error\", function(error) {\r\n            self_lw._showMessage(error.message, type = 'error')\r\n            console.log(error);\r\n        })\r\n    },\r\n\r\n    _validateCoordX(x, src) {\r\n        let response = true;\r\n        x = parseFloat(x)\r\n        switch (src) {\r\n            case 'gcs':\r\n                response = x >= -180 & x <= 180 ? true : false\r\n                return response;\r\n            case 'utm':\r\n                response = x >= 0 & x <= 500000 ? true : false\r\n                return response\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    _validateCoordY(y, src) {\r\n        let response = true;\r\n        y = parseFloat(y)\r\n        switch (src) {\r\n            case 'gcs':\r\n                response = y >= -90 & y <= 90 ? true : false\r\n                return response;\r\n            case 'utm':\r\n                response = y >= 0 & y <= 10000000 ? true : false\r\n                return response;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    _addResultados(graph) {\r\n        this.obj_index = this.obj_index + 1;\r\n        let name = `grafico_${this.obj_index}`;\r\n        let id = `${name}_lw`\r\n        let i_class = this.tabSelected == 'punto' ? 'far fa-dot-circle' : 'fas fa-draw-polygon'\r\n        let icon_elm = `<span class=\"icon is-small\"><i class=\"${i_class}\"></i></span>`\r\n\r\n        let tr = dojo.create('tr');\r\n\r\n        this.obj_resultados[id] = graph._extent\r\n        let tds = `<td>${icon_elm}</td><td class=\"has-text-left\">${name}</td><td><span class=\"icon is-small\"><i class=\"fas fa-search\"></i></span></td>`;\r\n        tr.id = id;\r\n        tr.innerHTML = tds;\r\n        tr.style.cursor = \"pointer\";\r\n        this.ap_resultados_body_lw.appendChild(tr)\r\n        dojo.query(`#${id}`).on('click', this._zoomToExtentByResult);\r\n    },\r\n\r\n    _zoomToExtentByResult(evt) {\r\n        let id = evt.currentTarget.id;\r\n        self_cw.map.setExtent(self_lw.obj_resultados[id], true);\r\n    },\r\n\r\n    startup() {\r\n        this.inherited(arguments);\r\n        console.log('Localizar_wgt::startup');\r\n        dojo.query('.opcion_lw').on('click', this._tabToggleForm);\r\n        dojo.query('.btn_aplicar_lw').on('click', this._graphPoint);\r\n    },\r\n    // onOpen() {\r\n    //   console.log('Localizar_wgt::onOpen');\r\n    // },\r\n    // onClose(){\r\n    //   console.log('Localizar_wgt::onClose');\r\n    // },\r\n    // onMinimize(){\r\n    //   console.log('Localizar_wgt::onMinimize');\r\n    // },\r\n    // onMaximize(){\r\n    //   console.log('Localizar_wgt::onMaximize');\r\n    // },\r\n    // onSignIn(credential){\r\n    //   console.log('Localizar_wgt::onSignIn', credential);\r\n    // },\r\n    // onSignOut(){\r\n    //   console.log('Localizar_wgt::onSignOut');\r\n    // }\r\n    // onPositionChange(){\r\n    //   console.log('Localizar_wgt::onPositionChange');\r\n    // },\r\n    // resize(){\r\n    //   console.log('Localizar_wgt::resize');\r\n    // }\r\n});"]}